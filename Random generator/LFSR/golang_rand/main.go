package main

import (
    "fmt"
    "math/rand"
    "math/big"
    cryptorand "crypto/rand"
)

func main() {
    var gaps [1000]int64
    var outputs [1000+32]uint64
    maxGap := big.NewInt(2)     // set to 1 for consecutive outputs

    for i := 0; i < 1000; i += 1 {
        gap, err := cryptorand.Int(cryptorand.Reader, maxGap)
        if err != nil {
            panic(err)
        }
        gaps[i] = gap.Int64()
        for j := int64(0); j < gaps[i]; j += 1 {
            // rand.Uint64()
            r := make([]byte, 32)
            rand.Read(r)
        }
        outputs[i] = rand.Uint64()
    }

    // extra outputs to verify exploit
    for i := 1000; i < 1000 + 32; i += 1 {
        outputs[i] = rand.Uint64()
    }

    fmt.Printf("outputs = %v\n", outputs)
    fmt.Printf("gaps = %v\n", gaps)
}